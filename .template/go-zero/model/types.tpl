type (
	{{.lowerStartCamelObject}}Model interface{
		{{.method}}

		// custom interface generated by jzero
	    BulkInsert(ctx context.Context, session sqlx.Session, datas []*{{.upperStartCamelObject}}) error
        FindByCondition(ctx context.Context, session sqlx.Session, conds ...condition.Condition) ([]*{{.upperStartCamelObject}}, error)
        FindSelectedColumnsByCondition(ctx context.Context, session sqlx.Session, columns []string, conds ...condition.Condition) ([]*{{.upperStartCamelObject}}, error)
        FindOneByCondition(ctx context.Context, session sqlx.Session, conds ...condition.Condition) (*{{.upperStartCamelObject}}, error)
        CountByCondition(ctx context.Context, session sqlx.Session, conds ...condition.Condition) (int64, error)
        PageByCondition(ctx context.Context, session sqlx.Session, conds ...condition.Condition) ([]*{{.upperStartCamelObject}}, int64 ,error)
        UpdateFieldsByCondition(ctx context.Context, session sqlx.Session, field map[string]any, conds ...condition.Condition) error
        DeleteByCondition(ctx context.Context, session sqlx.Session, conds ...condition.Condition) error
	}

	default{{.upperStartCamelObject}}Model struct {
		cachedConn sqlc.CachedConn
		conn sqlx.SqlConn
		table string
	}

	{{.upperStartCamelObject}} struct {
		{{.fields}}
	}
)
