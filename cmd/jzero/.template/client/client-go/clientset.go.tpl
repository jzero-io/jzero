// Code generated by jzero. DO NOT EDIT.
// type: clientset

package {{.Package}}

import (
	"github.com/jzero-io/restc"
	"{{.Module}}/typed"

	{{range $v := .Scopes}}"{{$.Module}}/typed/{{$v | lower}}"{{end}}
)

type Interface interface {
	Direct() typed.DirectInterface

	{{range $v := .Scopes}}{{$v | FirstUpper | ToCamel}}() {{$v | lower}}.{{$v | FirstUpper | ToCamel}}Interface{{end}}
}

type Clientset struct {
	// direct client to request
	direct *typed.DirectClient

	{{range $v := .Scopes}}{{$v | ToCamel}} *{{$v | lower}}.{{$v | FirstUpper| ToCamel}}Client{{end}}
}

func (x *Clientset) Direct() typed.DirectInterface {
	return x.direct
}

{{range $v := .Scopes}}func (x *Clientset) {{$v | FirstUpper| ToCamel}}() {{$v | lower}}.{{$v | FirstUpper| ToCamel}}Interface {
	return x.{{$v | ToCamel}}
}

{{end}}func NewClientWithOptions(ops ...restc.Opt) ({{if eq (len .Scopes) 1}}{{index .Scopes 0  | lower}}.{{index .Scopes 0 | FirstUpper| ToCamel}}Interface{{else}}*Clientset{{end}}, error) {
	c := &restc.RESTClient{}
	for _, op := range ops {
		if err := op(c); err != nil {
			return nil, err
		}
	}
	configShallowCopy := *c
	var cs Clientset
	var err error
	cs.direct, err = typed.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	{{range $v := .Scopes}}cs.{{$v | ToCamel}}, err = {{$v | lower}}.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	{{end}}
	return {{if eq (len .Scopes) 1}}cs.{{index .Scopes 0 | FirstUpper| ToCamel}}(){{else}}&cs{{end}}, nil
}