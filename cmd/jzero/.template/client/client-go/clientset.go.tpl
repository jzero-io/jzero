// Code generated by jzero. DO NOT EDIT.

package {{.Package}}

import (
	"github.com/jzero-io/restc"

	{{range $v := .Resources}}{{$v | ToCamel | lower}} "{{$.Module}}/typed/{{$v | lower}}"
	{{end}}
)

type Clientset interface {
	Direct() restc.Client

	{{range $v := .Resources}}{{$v | ToCamel | FirstUpper}}() {{$v | ToCamel | lower}}.{{$v | ToCamel | FirstUpper}}
	{{end}}
}

type clientset struct {
	// direct client to request
	direct restc.Client

	{{range $v := .Resources}}{{$v | ToCamel | FirstLower}} {{$v | ToCamel | lower}}.{{$v | ToCamel | FirstUpper}}
	{{end}}
}

func (cs *clientset) Direct() restc.Client {
	return cs.direct
}

{{range $v := .Resources}}func (cs *clientset) {{$v | FirstUpper | ToCamel}}() {{$v | ToCamel |lower}}.{{$v | ToCamel | FirstUpper}} {
	return cs.{{$v | ToCamel | FirstLower}}
}

{{end}}

func NewClientset(target string,ops ...restc.Opt) (Clientset, error) {
	restClient, err := restc.NewClient(target, ops...)
	if err != nil {
		return nil, err
	}

    cs := clientset{
		direct: restClient,
		{{range $v := .Resources}}{{$v | ToCamel | FirstLower}}: {{$v | ToCamel | lower}}.New{{$v | ToCamel | FirstUpper}}(restClient),
		{{end}}
	}

	return &cs, nil
}